[------------------------------]
[--GFOS Innovationsaward 2013--]
[------------------------------]
[--MOBIAM-Protokoll-Entwurf 1--]
[---(C) 2013 Niklas Weissner---]
[------------------------------]

[-----------Services-----------]

[sessionAuth]
Sitzungsauthentifikation. Gibt einen Einwegschlüssel für den Nutzer zurück.
Dieser wird im [login]-Service benötigt. Der Service muss diesen mit dem
zugehörigen Nutzernamen speichern und bei einem Login-Vorgang zur decodierung
des Passworts nutzen. Nachdem der zugehörige Nutzer einen Login-Vorgang
durchgeführt hat oder nachdem eine gewisse Zeit verstrichen ist muss der
Einwegschlüssel ungültig werden.
Parameter:
	username: Nutzer der die Sitzung starten will

[login]
Login-Prozess. Loggt den Nutzer mit einem Passwort ein und gibt die Sitzungs-ID
zurück, die für allle Interaktionsprozesse benötigt wird. Vor dem einloggen muss
in einem bestimten Zeitraum eine Sitzungsauthentifikation stattgefunden haben.
Der dort erhaltene Einwegschlüssel muss zum Verschlüsseln des Passworts benutzt werden.
Welcher Verschlüsselungsalgorithmus verwendet wird ist egal. Webservice und Client
müssen nur den gleichen Algorithmus verwenden. SHA wäre zu bevorzugen.
Parameter:
	username: 	Nutzer der eingeloggt werden soll
	key:		Verschlüsseltes Paswort des Nutzers

[keepalive]
Erneuert eine Sitzung ohne eine Aktion durchzuführen.
Parameter:
	session:	Die zu erneuernde Sitzung

[list]
Gibt ein XML-Dokument mit Anwesenheitsdaten zurück. Der Service filtert anhand interner
Einschränkungen einer Sitzung und anhand Filterausdrücken im Regex-Format, die der Client 
mitsenden kann. Eine [list]-Abfrage erneuert zudem die Sitzung des Nutzers.
Parameter:
	session:	Die Sitzung des Nutzers der eine Anfrage stellt
	filter:		Regex-Strings, getrennt mit Kommas, die Filterkriterien angeben

[logout]
Beendet eine Sitzung. Nach dem Beenden ist die Gültigkeit der Sitzungs-ID komplett
entfallen. Will der Nutzer weitere Abfragen stellen, muss eine neue Sitzungsauthentifikation
und ein neuer Login-Vorgang durchgeführt werden.
Parameter:
	session:	Die zu beendende Sitzung	

Alle Services sollten ihre Parameter als HTTP-POST erhalten, da diese Methode im
Gegensatz zu GET die Parameter nicht im Cache speichert und bei POST keine Daten in
der URL erkennbar sind. Die Services sollten ihre Rückgabewerte in einem Format zurückgeben,
dass unabghängig vom Typ der Daten einen Rückschluss auf aufgetretene Fehler und
Fehlermeldungen liefert.
Einfache Fehler wie die Nichtangabe eines Nutzernamens sollten durch einen individuellen
Code und eine Klartext-Nachricht identifizierbar sein.

Ein Beispielentwurf für das Rückgabeformat ist unten zu finden. 

[-------Nachrichtenformat------]
Jeder Service gibt eine Nachricht zurück die folgendermassen aufgebaut ist:

<Nachrichtentyp>[;<Daten>]*

[Nachrichtentypen]
0:	Anfragespezifisch, Erfolgreiche Anfrage

10:	Fehlermeldung(Siehe Fehlercodes)
	Aufbau:
		10;<Fehlercode>;<Fehlertext>

20:	XML-Nachricht

[Fehlercodes]
0:		Technische Fehlermeldung
10:		Klartext-Fehlermeldung