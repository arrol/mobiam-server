[------------------------------]
[--GFOS Innovationsaward 2013--]
[------------------------------]
[--MOBIAM-Protokoll-Entwurf 2--]
[---(C) 2013 Niklas Weissner---]
[------------------------------]

[-----------Services-----------]

[login]
Login-Prozess. Loggt den Nutzer mit einem Passwort ein und gibt die Sitzungs-ID
zurück, die für allle Interaktionsprozesse benötigt wird. Das Passwort sollte
nur als Hash-Wert(SHA wäre zu bevorzugen) übermittelt werden. Der Webservice sollte
das Passwort auch nur als Hash-Wert speichern und bei einem Login die beiden
Hashes vergleichen, sodass an keiner Stelle dass Passwort als Klartext die 
Loginmaske des Clients verlässt.
Parameter:
	username: 	Nutzer der eingeloggt werden soll
	password:	Hashwert des Passworts

[keepalive]
Erneuert eine Sitzung ohne eine Aktion durchzuführen.
Parameter:
	session:	Die zu erneuernde Sitzung

[list]
Gibt ein XML-Dokument mit Anwesenheitsdaten zurück. Der Service filtert anhand interner
Einschränkungen einer Sitzung und anhand Filterausdrücken im Regex-Format, die der Client 
mitsenden kann. Eine [list]-Abfrage erneuert zudem die Sitzung des Nutzers.
Parameter:
	session:	Die Sitzung des Nutzers der eine Anfrage stellt
	filter:		Regex-Strings, getrennt mit Kommas, die Filterkriterien angeben

[logout]
Beendet eine Sitzung. Nach dem Beenden ist die Gültigkeit der Sitzungs-ID komplett
entfallen. Will der Nutzer weitere Abfragen stellen, ein neuer Login-Vorgang 
durchgeführt werden.
Parameter:
	session:	Die zu beendende Sitzung	

Alle Services sollten ihre Parameter als HTTP-POST erhalten, da diese Methode im
Gegensatz zu GET die Parameter nicht im Cache speichert und bei POST keine Daten in
der URL erkennbar sind. Die Services sollten ihre Rückgabewerte in einem Format zurückgeben,
dass unabghängig vom Typ der Daten einen Rückschluss auf aufgetretene Fehler und
Fehlermeldungen liefert.
Einfache Fehler wie die Nichtangabe eines Nutzernamens sollten durch einen individuellen
Code und eine Klartext-Nachricht identifizierbar sein.

Ein Beispielentwurf für das Rückgabeformat ist unten zu finden. 

[-------Nachrichtenformat------]
Jeder Service gibt eine Nachricht zurück die folgendermassen aufgebaut ist:

Byte 0: 	Nachrichtentyp
Byte 1-n:	Daten als String

[Nachrichtentypen]
0:	Erfolgreiche Anfrage

10:	Fehlermeldung(Siehe Fehlercodes)
	Aufbau:
		<Fehlercode>;<Fehlertext>

20:	XML-Nachricht

[Fehlercodes]
0:		Technische Fehlermeldung
10:		Klartext-Fehlermeldung